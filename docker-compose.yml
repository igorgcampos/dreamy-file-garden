version: '3.8'
services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: cloudstorage-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: cloudstorage123
      MONGO_INITDB_DATABASE: cloudstorage
    volumes:
      - mongodb_data:/data/db
      - ./backend/docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - cloudstorage-net

  # Backend API
  backend:
    build: ./backend
    container_name: cloudstorage-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env
    environment:
      - MONGODB_URI=mongodb://cloudstorage_user:cloudstorage_pass@mongodb:27017/cloudstorage?authSource=cloudstorage
      - NODE_ENV=production
    depends_on:
      - mongodb
    volumes:
      - ./backend/keyfile.json:/app/keyfile.json:ro
    networks:
      - cloudstorage-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cloudstorage-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - cloudstorage-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: cloudstorage-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates (if any)
    depends_on:
      - frontend
      - backend
    networks:
      - cloudstorage-net
    profiles:
      - production  # Only start with --profile production

volumes:
  mongodb_data:
    driver: local

networks:
  cloudstorage-net:
    driver: bridge 
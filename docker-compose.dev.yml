version: '3.8'
services:
  # MongoDB Database for Development
  mongodb:
    image: mongo:7
    container_name: cloudstorage-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: dev123
      MONGO_INITDB_DATABASE: cloudstorage_dev
    volumes:
      - mongodb_dev_data:/data/db
      - ./backend/docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - cloudstorage-dev-net

  # MongoDB Express (Database Admin UI)
  mongo-express:
    image: mongo-express:latest
    container_name: cloudstorage-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: dev123
      ME_CONFIG_MONGODB_URL: mongodb://admin:dev123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: dev123
    depends_on:
      - mongodb
    networks:
      - cloudstorage-dev-net

  # Backend API (Development)
  backend:
    build: 
      context: ./backend
      target: development  # Use development stage if multi-stage build
    container_name: cloudstorage-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "9229:9229"  # Node.js debugging port
    env_file:
      - ./backend/.env.development
    environment:
      - MONGODB_URI=mongodb://cloudstorage_user:cloudstorage_pass@mongodb:27017/cloudstorage_dev?authSource=cloudstorage_dev
      - NODE_ENV=development
      - DEBUG=cloudstorage:*
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules  # Anonymous volume to prevent overwriting node_modules
      - ./backend/keyfile.json:/app/keyfile.json:ro
    networks:
      - cloudstorage-dev-net
    command: npm run dev  # Assuming you have a dev script with nodemon

volumes:
  mongodb_dev_data:
    driver: local

networks:
  cloudstorage-dev-net:
    driver: bridge